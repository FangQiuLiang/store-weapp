<template>
  <view class="order">
    <!-- 头部 start -->
    <view class="head">
      <view wx:if="{{UserAddress !== null}}" class="edit-address" bindtap="onClickToAddressEditPage">
        <view class="address">
          <view class="item">
            <van-icon class="icon" name="user-o" size="34rpx" color="#ff6a3c" />
            <text class="text">{{UserAddress.name}}</text>
          </view>
          <view class="item">
            <van-icon class="icon" name="phone-o" size="34rpx" color="#ff6a3c" />
            <text class="text">{{UserAddress.mobile}}</text>
          </view>
          <view class="item">
            <van-icon class="icon" name="location-o" size="34rpx" color="#ff6a3c" />
            <text class="text">{{CompleteAddress}}</text>
          </view>
        </view>
        <view class="arrows"><van-icon name="arrow" /></view>
      </view>

      <view wx:else class="add-address" bindtap="onClickToAddressAddPage">添加地址 +</view>
    </view>
    <!-- 头部 end -->

    <!-- 商品列表 start -->
    <view class="product">
      <view class="item" wx:for="{{OrderProductList}}" wx:key="id">
        <van-card custom-class="custom-card" num="{{item.count}}" price="{{item.product.price}}" desc="{{item.summary || ''}}" title="{{item.product.name}}" thumb="{{item.product.mainImgUrl}}"></van-card>
      </view>
    </view>
    <!-- 商品列表 end -->

    <!-- 底部提交栏 start -->
    <van-submit-bar price="{{totalPrice}}" label="付款合计：" custom-class="custom-submit-bar" button-text="去付款" bind:submit="onClickPayment">
      <view slot="tip" wx:if="{{UserAddress === null}}">您还没有收货地址, <text class="primary" bindtap="onClickToAddressAddPage">添加地址</text></view>
    </van-submit-bar>
    <!-- 底部提交栏 end -->

    <van-toast id="van-toast" />
    <van-dialog id="van-dialog" />
  </view>
</template>

<script>
  import { createPage } from '@mpxjs/core'
  import util from '@/utils/util'
  import cart from '@/store/cart'
  import userAddressModel from '@/store/user_address-model'
  import orderModel from '@/store/order-model'
  import Toast from '@vant/weapp/dist/toast/toast'
  import Dialog from '@vant/weapp/dist/dialog/dialog'

  createPage({
    data: {},
    onLoad () {
      Toast.loading({ message: '加载中...', duration: 0  })
      this.GetUserAddress().then(res => {
        Toast.clear()
      })
    },
    computed: {
      ...cart.mapState(['OrderProductList']),
      ...userAddressModel.mapState(['UserAddress']),
      ...orderModel.mapState(['OrderList']),
      ...userAddressModel.mapGetters(['CompleteAddress']),
      totalPrice () {
        let total = 0
        this.OrderProductList.forEach(item => {
          if (item.isSelected) {
            total += (item.product.price * 100) * item.count
          }
        })
        return total
      }
    },
    methods: {
      ...cart.mapMutations(['DELETE_CART_PRODUCT']),
      ...userAddressModel.mapActions(['GetUserAddress']),
      ...orderModel.mapMutations(['RESET_ORDER_LIST', 'SET_PARAMS']),
      ...orderModel.mapActions(['GetOrderList', 'placeOrder']),
      onClickPayment () {
        if (!this.UserAddress) {
          Toast('您还没有收获地址，请填写收货地址！')
        } else {
          const formData = {}
          const ids = []
          formData.addressId = this.UserAddress.id
          formData.products = this.OrderProductList.map(item => {
            ids.push(item.product.id)
            const productId = item.product.id
            const count = item.count
            return { productId, count }
          })
          Dialog.confirm({
            title: '支付提示',
            message: '本产品仅用于演示，支付系统已屏蔽',
            showCancelButton: false
          }).then(() => {
            this.placeOrder(formData).then(res => {
              if (res.data.code === 200) {
                Toast({
                  type: 'success',
                  message: '下单成功',
                  mask: true,
                  onClose: () => {
                    this.DELETE_CART_PRODUCT(ids)
                    this.RESET_ORDER_LIST()
                    this.GetOrderList().then(res => {
                      wx.switchTab({ url: '/pages/my/index' })
                    })
                  }
                })
              } else {
                Toast.fail(res.data.msg)
              }
            })
          }).catch(() => {})
        }
      },
      // 点击跳转到地址编辑页面
      onClickToAddressEditPage () {
        wx.navigateTo({ url: '/pages/address/edit' })
      },
      // 点击跳转到地址添加页面
      onClickToAddressAddPage () {
        wx.navigateTo({ url: '/pages/address/add' })
      }
    }
  })
</script>

<style lang="less">
.order {
  display: flex;
  flex-direction: column;
  padding-bottom: 100px;
  min-height: calc(100vh - 100px);
  background: #efefef;
  .head {
    background-color: #fff;
    padding: 20px 30px;
    margin-bottom: 20px;
  }
  .edit-address {
    display: flex;
    .address {
      font-size: 28px;
      flex: 1;
      display: flex;
      flex-wrap: wrap;
      justify-content: space-between;
      .icon { float: left; height: 42px; }
      .item:nth-child(3) { width: 100%; margin-top: 10px; }
      .text { margin-left: 10px; vertical-align: top; }
    }
    .arrows { width: 100px; text-align: center; line-height: 100px; }
  }

  .add-address {
    text-align: center;
  }

  .product {
    background: #fff;
    .custom-card { background: #fff; }
    .item {
      overflow: hidden; box-sizing: border-box; height: 208px;
    }
    .item + .item {
      border-top: 1px solid #f1f4f8;
    }
  }

  .custom-submit-bar {
    .van-submit-bar__text { text-align: left; }
    .primary { color: #1989fa; }
  }
}
</style>

<script type="application/json">
  {
    "usingComponents": {
      "van-icon": "@vant/weapp/dist/icon/index",
      "van-submit-bar": "@vant/weapp/dist/submit-bar/index",
      "van-card": "@vant/weapp/dist/card/index",
      "van-toast": "@vant/weapp/dist/toast/index",
      "van-dialog": "@vant/weapp/dist/dialog/index"
    },
    "navigationBarTitleText": "订单"
  }
</script>
