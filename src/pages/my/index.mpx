<template>
  <scroll-view class="my tab-bar-page" scroll-y bindscrolltolower="bindscrolltolower">
    <view class="userinfo">
      <view class="block" bindtap="onClickToLoginPage">
        <van-image round width="150rpx" height="150rpx" fit="cover" src="{{UserInfo.avatarUrl}}"></van-image>
        <view class="name">{{!!UserInfo.nickName ? UserInfo.nickName : '未登录'}}</view>
      </view>
    </view>

    <view class="user-address">
      <van-cell title="地址管理" title-class="title-class" is-link bind:click="onClickToAddressPage" />
      <view wx:if="{{UserAddress !== null}}">
        <van-cell title="{{UserAddress.name}}" title-class="text" />
        <van-cell title="{{UserAddress.mobile}}" title-class="text" />
        <van-cell title="{{CompleteAddress}}" title-class="text" />
      </view>
    </view>

    <view class="order" wx:if="{{OrderList.rows.length > 0}}">
      <van-cell title="我的订单" title-class="title-class" />
      <view class="order-item" wx:for="{{OrderList.rows}}" wx:key="id">
        <view bindtap="onClickToOrderDetailPage(item)">
          <view class="no">
            <text>订单编号：</text>
            <text>{{item.orderNo}}</text>
          </view>
          <view class="product">
            <van-image width="176rpx" height="176rpx" fit="cover" src="{{item.snapImg}}"></van-image>
            <view class="info">
              <view>{{item.snapName}}</view>
              <view>{{item.totalCount}}件商品</view>
            </view>
            <view class="status" style="color: {{item.statusTextColor}}">{{item.statusText}}</view>
          </view>
        </view>
        <view class="action">
          <text>实付：￥{{item.totalPrice}}</text>
          <van-button wx:if="{{item.status === 1}}" type="danger" size="small" bind:click="onClickPayment(item)">付款</van-button>
        </view>
      </view>
    </view>

    <van-toast id="van-toast" />
    <van-dialog id="van-dialog" />
  </scroll-view>
</template>

<script>
  import { createPage } from '@mpxjs/core'
  import util from '@/utils/util'
  import Dialog from '@vant/weapp/dist/dialog/dialog'
  import Toast from '@vant/weapp/dist/toast/toast'
  import tokenModel from '@/store/token-model'
  import userAddressModel from '@/store/user_address-model'
  import orderModel from '@/store/order-model'

  createPage({
    data: {},
    onLoad () {
      util.setTabBarSelected(this, 3)
      Toast.loading({ message: '加载中...', duration: 0  })
      this.RESET_ORDER_LIST()
      Promise.all([this.GetUserAddress(), this.GetOrderList()]).then(res => {
        Toast.clear()
      })
    },
    computed: {
      ...tokenModel.mapState(['UserInfo']),
      ...orderModel.mapState(['OrderList', 'Params']),
      ...userAddressModel.mapState(['UserAddress']),
      ...userAddressModel.mapGetters(['CompleteAddress'])
    },
    methods: {
      ...userAddressModel.mapActions(['GetUserAddress']),
      ...orderModel.mapActions(['GetOrderList']),
      ...orderModel.mapMutations(['SET_ORDER_DETAIL', 'SET_PARAMS', 'RESET_ORDER_LIST']),
      // 点击跳转到地址管理页面
      onClickToAddressPage () {
        if (this.UserAddress !== null) {
          wx.navigateTo({ url: '/pages/address/edit' })
        } else {
          wx.navigateTo({ url: '/pages/address/add' })
        }
      },
      // 点击付款
      onClickPayment (order) {
        Dialog.confirm({
          title: '支付提示',
          message: '本产品仅用于演示，支付系统已屏蔽',
          showCancelButton: false
        })
      },
      // 点击跳转到订单详情页面
      onClickToOrderDetailPage (order) {
        this.SET_ORDER_DETAIL(order)
        wx.navigateTo({ url: '/pages/order/detail' })
      },
      // 点击跳转到登录页面
      onClickToLoginPage () {
        if (!this.UserInfo.nickName) {
          wx.navigateTo({ url: `/pages/login/index` })
        }
      },
      // 上拉加载
      bindscrolltolower () {
        if (this.OrderList.rows.length < this.OrderList.count) {
          Toast.loading({ message: '加载中...', duration: 0  })
          const params = {
            page: this.Params.page + 1,
            size: this.Params.size
          }
          this.SET_PARAMS(params)
          this.GetOrderList().then(res => {
            Toast.clear()
          })
        }
      }
    }
  })
</script>

<style lang="less">
.my {
  background: #efefef;
  .userinfo {
    padding: 20px 0;
    background: #ff6a3c;
    text-align: center;
    margin-bottom: 20px;
    .block { display: inline-block; }
    .name { margin-top: 10px; font-size: 36px; color: #fff; }
  }
  .title-class { text-align: center; }
  .user-address { margin-bottom: 20px; }
  .text { color: #909399; }

  .order {
    color: #909399;
    font-size: 28px;
    .order-item {
      background: #fff;
      padding: 0 20px;
      .no {
        line-height: 88px;
      }
      .product {
        border-bottom: 1px solid #eee;
        border-top: 1px solid #eee;
        display: flex;
        .info {
          flex: 1;
          display: flex;
          color: #909399;
          justify-content: center;
          line-height: 60px;
          flex-direction: column;
          padding: 0 20px;
        }
        .status {
          font-size: 24px;
          display: flex;
          align-items: center;
        }
      }
    }
    .action {
      display: flex;
      justify-content: space-between;
      line-height: 88px;
      color: #666;
    }
  }
  .order-item + .order-item { margin-top: 20px; }
}
</style>

<script type="application/json">
  {
    "usingComponents": {
      "van-image": "@vant/weapp/dist/image/index",
      "van-cell": "@vant/weapp/dist/cell/index",
      "van-cell-group": "@vant/weapp/dist/cell-group/index",
      "van-button": "@vant/weapp/dist/button/index",
      "van-dialog": "@vant/weapp/dist/dialog/index",
      "van-toast": "@vant/weapp/dist/toast/index"
    },
    "navigationBarTitleText": "我的",
    "navigationBarTextStyle": "white",
    "navigationBarBackgroundColor": "#ff6a3c"
  }
</script>
